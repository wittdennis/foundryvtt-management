# yaml-language-server: $schema=https://raw.githubusercontent.com/argoproj/argo-workflows/main/api/jsonschema/schema.json
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: foundry-backup-restore-template
spec:
  entrypoint: main
  serviceAccountName: foundry-workflows
  artifactGC:
    strategy: OnWorkflowDeletion
    serviceAccountName: foundry-workflows
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  arguments:
    parameters:
      - name: instance
      - name: pvc-name
  templates:
    - name: main
      inputs:
        parameters:
          - name: instance
          - name: pvc-name
      steps:
        - - name: list-snapshots
            template: list-snapshots
        - - name: choose-snapshot
            template: choose-snapshot
        - - name: download-snapshot
            template: download-snapshot
            arguments:
              parameters:
                - name: snapshotId
                  value: "{{steps.choose-snapshot.outputs.parameters.snapshotId}}"
        - - name: scale-down
            arguments:
              parameters:
                - name: name
                  value: "{{inputs.parameters.instance}}"
                - name: replicaCount
                  value: "0"
                - name: type
                  value: statefulset
            templateRef:
              template: scale-workload
              name: scale-workload
        - - name: restore-data
            template: restore-data
            arguments:
              parameters:
                - name: pvc-name
                  value: "{{inputs.parameters.pvc-name}}"
              artifacts:
                - name: backup-archive
                  from: "{{steps.download-snapshot.outputs.artifacts.backup-archive}}"

    - name: list-snapshots
      volumes:
        - name: tmp
          emptyDir: {}
      container:
        image: restic/restic:0.18.0 # renovate
        command: [sh, -c]
        args:
          - |
            set -eu

            restic init || true
            restic snapshots
        volumeMounts:
          - name: tmp
            mountPath: /tmp
        env:
          - name: AZURE_ACCOUNT_NAME
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: azure-account-name
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: azure-account-key
          - name: RESTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: restic-password
          - name: RESTIC_REPOSITORY
            value: azure:foundry:/
        securityContext:
          runAsUser: 100
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL

    - name: choose-snapshot
      suspend: {}
      inputs:
        parameters:
          - name: snapshotId
            default: "CHANGE ME!"
            description: >-
              Snapshot ID to be restored. Can be retrieved from previous step
      outputs:
        parameters:
          - name: snapshotId
            valueFrom:
              supplied: {}

    - name: download-snapshot
      inputs:
        parameters:
          - name: snapshotId
      volumes:
        - name: tmp
          emptyDir: {}
      outputs:
        artifacts:
          - name: backup-archive
            path: /tmp/foundry-data.tar.xz
            s3:
              key: "{{workflow.name}}/foundry-data.tar.xz"
      container:
        image: restic/restic:0.18.0 # renovate
        command: [sh, -c]
        args:
          - |
            set -eu

            echo "Getting snapshot form restic repository"
            restic init || true
            restic restore {{inputs.parameters.snapshotId}} --target / --path /tmp/foundry-data.tar.xz
        volumeMounts:
          - name: tmp
            mountPath: /tmp
        env:
          - name: AZURE_ACCOUNT_NAME
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: azure-account-name
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: azure-account-key
          - name: RESTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: backup-settings
                key: restic-password
          - name: RESTIC_REPOSITORY
            value: azure:foundry:/
        securityContext:
          runAsUser: 100
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL

    - name: restore-data
      serviceAccountName: foundry-workflows
      inputs:
        parameters:
          - name: pvc-name
        artifacts:
          - name: backup-archive
            path: /tmp/foundry-data.tar.xz
      volumes:
        - name: foundry-data
          persistentVolumeClaim:
            claimName: "{{inputs.parameters.pvc-name}}"
        - name: tmp
          emptyDir: {}
      container:
        image: denniswitt/tar:1.0.6 # renovate
        workingDir: /tmp
        command:
          - sh
          - -c
        args:
          - |
            set -eux

            tar -C /foundry-data -Jxvf foundry-data.tar.xz --overwrite --strip-components=1
        volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /foundry-data
            name: foundry-data
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          seccompProfile:
            type: RuntimeDefault
